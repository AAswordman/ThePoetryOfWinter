{
  "format_version": "1.8.0",
  "render_controllers": {
    "controller.render.cindx": {
      "geometry": "Geometry.cind",
      "materials": [ { "*": "Material.default" } ],
      "is_hurt_color": {},
      "on_fire_color": {},
      "arrays": {
        "geometries": {
          "array.cindg": [ 
            "Geometry.cind",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind"
                      ],
          "array.cindg2": [ 
            "Geometry.cind",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind"
                      ]
                    },
      "textures": {     
          "array.cind": [
            "Texture.ccorner",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.ccorner"
                         ],
          "array.cind2": [
            "Texture.ccorner",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.ccorner"
                         ]
                       }
                    },

      "geometry": "(query.position(2) <= 0) ? array.cindg[1 + (math.ceil(math.abs(query.position(2) / 16)) * 16) - (math.ceil(math.abs(query.position(2)))) + (query.position(2) >= 0) + -1] : array.cindg2[16 + (math.ceil(math.abs(query.position(2) / 16)) * 16) - (math.ceil(math.abs(query.position(2)))) + (query.position(2) >= 0) + -1]",
      "textures": [ "(query.position(0) <= 0) ? array.cind[1 + (math.ceil(math.abs(query.position(0) / 16)) * 16) - (math.ceil(math.abs(query.position(0)))) + (query.position(0) <= 0)*-1] : array.cind2[16 + (math.ceil(math.abs(query.position(0) / 16)) * 16) - (math.ceil(math.abs(query.position(0)))) + (query.position(0) <= 0)*-1]"
]
    },
    "controller.render.cindz": {
      "geometry": "Geometry.cind",
      "materials": [ { "*": "Material.default" } ],
      "is_hurt_color": {},
      "on_fire_color": {},
      "arrays": {
        "geometries": {
          "array.cindg": [ 
            "Geometry.cind",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind"
                      ],
          "array.cindg2": [ 
            "Geometry.cind",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind2",
            "Geometry.cind"
                      ]
                    },
      "textures": {     
          "array.cind": [
            "Texture.ccorner",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.ccorner"
                         ],
          "array.cind2": [
            "Texture.ccorner",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.cedge",
            "Texture.ccorner"
                         ]
                       }
                    },

      "geometry": "(query.position(0) <= 0) ? array.cindg[1 + (math.ceil(math.abs(query.position(0) / 16)) * 16) - (math.ceil(math.abs(query.position(0)))) + (query.position(0) >= 0) + -1] : array.cindg2[16 + (math.ceil(math.abs(query.position(0) / 16)) * 16) - (math.ceil(math.abs(query.position(0)))) + (query.position(0) >= 0) + -1]",
      "textures": [ "(query.position(2) <= 0) ? array.cind[1 + (math.ceil(math.abs(query.position(2) / 16)) * 16) - (math.ceil(math.abs(query.position(2)))) + (query.position(2) <= 0)*-1] : array.cind2[16 + (math.ceil(math.abs(query.position(2) / 16)) * 16) - (math.ceil(math.abs(query.position(2)))) + (query.position(2) <= 0)*-1]"
]
    }
}}