{
    "format_version": "1.10.0",
    "minecraft:client_entity": {
        "description": {
            "identifier": "minecraft:player",
            "materials": {
                "default": "entity_alphatest",
                "cape": "entity_alphatest",
                "animated": "player_animated"
            },
            "textures": {
                "default": "textures/entity/steve",
                "cape": "textures/entity/cape_invisible",
                "cbg2": "textures/sketch/chunkbg2",
                "cooling": "textures/pom_ui/cooling_bar",
                "cooling_bg": "textures/pom_ui/cooling_bg",
                "cbg_wg": "textures/sketch/cbg_wg",
                "cbg_ruin1": "textures/sketch/ruin"
            },
            "geometry": {
                "default": "geometry.humanoid.custom",
                "cape": "geometry.cape",
                "cbg": "geometry.cbg",
                "cbg_wg": "geometry.cbg_wg",
                "cbg_ruin1": "geometry.cbg_ruin1",
                "cooling":"geometry.cooling",
                "cooling_bg":"geometry.cooling_bg"
            },
            "scripts": {
                "scale": "0.9375",
                "initialize": [
                    "variable.is_holding_right = 0.0;",
                    "variable.is_blinking = 0.0;",
                    "variable.last_blink_time = 0.0;",
                    "variable.hand_bob = 0.0;",
                    "variable.ruin_overworld_distance = 384;",
                    "variable.ruin_overworld_x1 = 0.0;",
                    "variable.ruin_overworld_x2 = 0.0;",
                    "variable.ruin_overworld_x3 = 0.0;",
                    "variable.ruin_overworld_x4 = 0.0;",
                    "variable.ruin_overworld_z1 = 0.0;",
                    "variable.ruin_overworld_z2 = 0.0;",
                    "variable.ruin_overworld_z3 = 0.0;",
                    "variable.ruin_overworld_z4 = 0.0;"
                ],
                "pre_animation": [
                    "variable.helmet_layer_visible = 1.0;",
                    "variable.leg_layer_visible = 1.0;",
                    "variable.boot_layer_visible = 1.0;",
                    "variable.chest_layer_visible = 1.0;",
                    "variable.attack_body_rot_y = Math.sin(360*Math.sqrt(variable.attack_time)) * 5.0;",
                    "variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;",
                    "variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);",
                    "variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;",
                    "variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);",
                    "variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;"
                    // "variable.x2 = math.floor((query.position(0))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.z2 = math.floor((query.position(2))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.c1 = math.round(10000*1);variable.c2 = math.round(10000*1);variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x1 = variable.x1;variable.ruin_overworld_z1 = variable.z1;",
                    // "variable.x2 = (1+math.floor((query.position(0))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.z2 = math.floor((query.position(2))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.c1 = math.round(10000*1);variable.c2 = math.round(10000*1);variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x2 = variable.x1;variable.ruin_overworld_z2 = variable.z1;",
                    // "variable.x2 = math.floor((query.position(0))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.z2 = (1+math.floor((query.position(2))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.c1 = math.round(10000*1);variable.c2 = math.round(10000*1);variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x3 = variable.x1;variable.ruin_overworld_z3 = variable.z1;",
                    // "variable.x2 = (1+math.floor((query.position(0))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.z2 = (1+math.floor((query.position(2))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.c1 = math.round(10000*1);variable.c2 = math.round(10000*1);variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x4 = variable.x1;variable.ruin_overworld_z4 = variable.z1;"
                    // "variable.x2 = math.floor((query.position(0))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.z2 = math.floor((query.position(2))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.c1 = math.round(10000*math.abs(query.noise((variable.x2+64) / 200.0, (variable.x2+64) / 200.0)));variable.c2 = math.round(10000*math.abs(query.noise((variable.x2+128)  / 200.0, (variable.z2+128) / 200.0)));variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x1 = variable.x1;variable.ruin_overworld_z1 = variable.z1;",
                    // "variable.x2 = (1+math.floor((query.position(0))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.z2 = math.floor((query.position(2))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.c1 = math.round(10000*math.abs(query.noise((variable.x2+64) / 200.0, (variable.x2+64) / 200.0)));variable.c2 = math.round(10000*math.abs(query.noise((variable.x2+128)  / 200.0, (variable.z2+128) / 200.0)));variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x2 = variable.x1;variable.ruin_overworld_z2 = variable.z1;",
                    // "variable.x2 = math.floor((query.position(0))/variable.ruin_overworld_distance)*variable.ruin_overworld_distance;variable.z2 = (1+math.floor((query.position(2))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.c1 = math.round(10000*math.abs(query.noise((variable.x2+64) / 200.0, (variable.x2+64) / 200.0)));variable.c2 = math.round(10000*math.abs(query.noise((variable.x2+128)  / 200.0, (variable.z2+128) / 200.0)));variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x3 = variable.x1;variable.ruin_overworld_z3 = variable.z1;",
                    // "variable.x2 = (1+math.floor((query.position(0))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.z2 = (1+math.floor((query.position(2))/variable.ruin_overworld_distance))*variable.ruin_overworld_distance;variable.c1 = math.round(10000*math.abs(query.noise((variable.x2+64) / 200.0, (variable.x2+64) / 200.0)));variable.c2 = math.round(10000*math.abs(query.noise((variable.x2+128)  / 200.0, (variable.z2+128) / 200.0)));variable.r1 = math.mod((variable.c1 * 9301 + 49297),233280) / 233280.0;variable.r2 = math.mod((variable.c2 * 9301 + 49297),233280) / 233280.0;variable.x1 = variable.x2 + math.round(variable.r1*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.z1 = variable.z2 + math.round(variable.r2*(variable.ruin_overworld_distance/16/2))*16 + variable.ruin_overworld_distance/4;variable.ruin_overworld_x4 = variable.x1;variable.ruin_overworld_z4 = variable.z1;"
                ],
                "animate": [
                    "root",
                    "bomber",
                    "catapult_explode",
                    "catapult_normal",
                    "flintlock",
                    "flintlock_pro",
                    "lapis_magic_book",
                    "short_flintlock",
                    "chunk"
                ]
            },
            "animations": {
            //Longsword
                "longsword": "animation.player.first_person.longsword_hold",
                "longsword_controller": "controller.animation.tp.longsword",
                "longsword_tp_hold": "animation.player.tp.longsword_hold",
                "longsword_tp_first_attack": "animation.player.tp.longsword_first_attack",
                "longsword_tp_first_attack_interval":"animation.player.tp.longsword_first_attack_interval",
                "longsword_tp_second_attack": "animation.player.tp.longsword_second_attack",
                "longsword_tp_second_attack_interval": "animation.player.tp.longsword_second_attack_interval",
                "longsword_tp_fast_attack_1": "animation.player.tp.longsword_fast_attack_1",
                "longsword_tp_fast_attack_2": "animation.player.tp.longsword_fast_attack_2",
                "longsword_tp_fast_attack_interval": "animation.player.tp.longsword_fast_attack_interval",
                "longsword_fp_hold": "animation.fp.longsword_hold",
                "longsword_fp_first_attack": "animation.player.first_person.attack_rotation",
                "longsword_fp_second_attack": "animation.player.first_person.attack_rotation",
                "first_person_longsword_controller":"controller.animation.player.fp.longsword",

                "bomber": "controller.animation.player.bomber",
                "catapult_explode": "controller.animation.player.catapult_explode",
                "catapult_normal": "controller.animation.player.catapult_normal",
                "flintlock": "controller.animation.player.flintlock",
                "flintlock_pro": "controller.animation.player.flintlock_pro",
                "lapis_magic_book": "controller.animation.player.lapis_magic_book",
                "short_flintlock": "controller.animation.player.short_flintlock",
                "hold": "animation.player.hold",
                "root": "controller.animation.player.root",
                "base_controller": "controller.animation.player.base",
                "hudplayer": "controller.animation.player.hudplayer",
                "humanoid_base_pose": "animation.humanoid.base_pose",
                "look_at_target": "controller.animation.humanoid.look_at_target",
                "look_at_target_ui": "animation.player.look_at_target.ui",
                "look_at_target_default": "animation.humanoid.look_at_target.default",
                "look_at_target_gliding": "animation.humanoid.look_at_target.gliding",
                "look_at_target_swimming": "animation.humanoid.look_at_target.swimming",
                "look_at_target_inverted": "animation.player.look_at_target.inverted",
                "cape": "animation.player.cape",
                "move.arms": "animation.player.move.arms",
                "move.legs": "animation.player.move.legs",
                "swimming": "animation.player.swim",
                "swimming.legs": "animation.player.swim.legs",
                "riding.arms": "animation.player.riding.arms",
                "riding.legs": "animation.player.riding.legs",
                "holding": "animation.player.holding",
                "brandish_spear": "animation.humanoid.brandish_spear",
                "charging": "animation.humanoid.charging",
                "attack.positions": "animation.player.attack.positions",
                "attack.rotations": "animation.player.attack.rotations",
                "sneaking": "animation.player.sneaking",
                "bob": "animation.player.bob",
                "damage_nearby_mobs": "animation.humanoid.damage_nearby_mobs",
                "bow_and_arrow": "animation.humanoid.bow_and_arrow",
                "use_item_progress": "animation.humanoid.use_item_progress",
                "skeleton_attack": "animation.skeleton.attack",
                "sleeping": "animation.player.sleeping",
                "first_person_base_pose": "animation.player.first_person.base_pose",
                "first_person_empty_hand": "animation.player.first_person.empty_hand",
                "first_person_swap_item": "animation.player.first_person.swap_item",
                "first_person_attack_controller": "controller.animation.player.first_person_attack",
                "first_person_attack_rotation": "animation.player.first_person.attack_rotation",
                "first_person_vr_attack_rotation": "animation.player.first_person.vr_attack_rotation",
                "first_person_walk": "animation.player.first_person.walk",
                "first_person_map_controller": "controller.animation.player.first_person_map",
                "first_person_map_hold": "animation.player.first_person.map_hold",
                "first_person_map_hold_attack": "animation.player.first_person.map_hold_attack",
                "first_person_map_hold_off_hand": "animation.player.first_person.map_hold_off_hand",
                "first_person_map_hold_main_hand": "animation.player.first_person.map_hold_main_hand",
                "first_person_crossbow_equipped": "animation.player.first_person.crossbow_equipped",
                "third_person_crossbow_equipped": "animation.player.crossbow_equipped",
                "third_person_bow_equipped": "animation.player.bow_equipped",
                "crossbow_hold": "animation.player.crossbow_hold",
                "crossbow_controller": "controller.animation.player.crossbow",
                "shield_block_main_hand": "animation.player.shield_block_main_hand",
                "shield_block_off_hand": "animation.player.shield_block_off_hand",
                "blink": "controller.animation.persona.blink",
                "chunk": "animation.player.chunk"
            },
            "render_controllers": [
                {
                    "controller.render.player.first_person": "variable.is_first_person"
                },
                {
                    "controller.render.player.third_person": "!variable.is_first_person && !variable.map_face_icon"
                },
                {
                    "controller.render.player.map": "variable.map_face_icon"
                },
                {
                    "controller.render.cooling": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                }
                // {
                //     "controller.render.cbg": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // }
                // {
                //     "controller.render.cbg_wg": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // },
                // {
                //     "controller.render.cbg_ruin1": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // }
                // ,
                // {
                //     "controller.render.cbg_ruin2": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // },
                // {
                //     "controller.render.cbg_ruin3": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // },
                // {
                //     "controller.render.cbg_ruin4": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0"
                // }
            ],
            "enable_attachables": true
        }
    }
}